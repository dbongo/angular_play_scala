securesocial {

  # If enabled, sets the path to your copy of Bootstrap.css to be used instead of the default one provided by SecureSocial
  bootstrapCssPath = "bootstrap/css/bootstrap.min.css"
 
  # If enabled, sets the Favicon to display when in SecureSocial pages
  faviconPath = "images/favicon.png"
 
  # If enabled, sets the path to your copy of JQuery to be used instead of the default one provided by SecureSocial
  jqueryPath = "jquery/jquery-1.10.2.min.js"

  # SecureSocial tries to redirect the user back to the page they intended to access after login. There are cases where this can't be
  # done (eg: the user tried to POST a form) or accessed the login page directly. Adding the onLoginGoto property allows SecureSocial
  # to redirect the user to the page you need.
  onLoginGoTo = /app/profilecheck

  # The page where the user is redirected to after logging out.
  onLogoutGoTo = /

  # You can enable SSL for OAuth callbacks, the login, signup and reset password actions of the UsernamePasswordProvider and for the 
  # cookie used to trace users (you'll want this in production mode).
  ssl = false

  # This setting is optional. It is only needed if you are not using the default Assets controller provided by Play. The value must
  # be the full qualified class name of your controller prepended by the word Reverse.
  # assetsController = 

  # If your application has multiple assets configured specify the path that should be used for SecureSocial. It defaults to
  # '/public'.
  assetsPath = /assets

  cookie {
    # The cookie name (defaults to 'id').
    # name = id

    # The path for which the cookie should be sent by the browser (defaults to /)
    # path = /

    # The domain for which the cookie should be sent (it is left empty by default)
    domain = ${DOMAIN}

    # If set to true, the cookie is not readable by a client side script (defaults to true).
    # httpOnly = true

    # The amount of time the session id will remain valid since the last request (defaults to 30).
    idleTimeoutInMinutes = 15

    # The amount of time the session id will be valid since the user authenticated. After this the user will need to re-authenticate 
    # (defaults to 720 minutes - 12 hours)
    # absoluteTimeoutInMinutes = 720 

    # Makes the cookie transient (defaults to true). Transient cookie are recommended because the cookie dissapears when the browser
    # is closed. If set to false, the cookie will survive browser restarts and the user won't need to login again (as long as the 
    # idle and absolute timeouts have not been passed).
    # makeTransient = true
  }

  google {
    authorizationUrl="https://accounts.google.com/o/oauth2/auth"
    accessTokenUrl="https://accounts.google.com/o/oauth2/token"
    clientId=${CLIENT_ID}
    clientSecret=${CLIENT_SECRET}
    scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
  }

}